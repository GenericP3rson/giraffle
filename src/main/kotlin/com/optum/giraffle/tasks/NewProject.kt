package com.optum.giraffle.tasks

import org.gradle.api.DefaultTask
import org.gradle.api.tasks.TaskAction
import java.io.File
import java.util.Date

open class NewProject : DefaultTask() {
    @TaskAction
    fun newProject() {
        project.ant { myAnt ->
            myAnt.invokeMethod("echo", "Welcome to the new project wizard. Please answer the following questions to start a new project.")
            val myMap: MutableMap<String, String> = mutableMapOf<String, String>(
                "message" to "Project Name:",
                "addproperty" to "gsqlGraphname",
                "defaultvalue" to "myApp"
            )
            myAnt.invokeMethod("input", myMap)

            myMap["message"] = "Tigergraph Host:"
            myMap["addproperty"] = "gsqlHost"
            myMap["defaultvalue"] = "localhost"
            myAnt.invokeMethod("input", myMap)

            myMap["message"] = "Tigergraph Admin username:"
            myMap["addproperty"] = "gsqlAdminUsername"
            myMap["defaultvalue"] = "tigergraph"
            myAnt.invokeMethod("input", myMap)

            myMap["message"] = "Tigergraph Admin password:"
            myMap["addproperty"] = "gsqlAdminPassword"
            myMap["defaultvalue"] = "tigergraph"
            myAnt.invokeMethod("input", myMap)

            myMap["message"] = "Do you want to support multiple environments? "
            myMap["addproperty"] = "gsqlEnablePropertiesPlugin"
            myMap["defaultvalue"] = "y"
            myMap["validargs"] = "y,n"
            myAnt.invokeMethod("input", myMap)

            val now = Date()

            val propertiesText: String = """
                # Properties generated by gsqlNewProject at $now
                gsqlHost=${myAnt.getProperty("gsqlHost")}
                gsqlAdminUsername=${myAnt.getProperty("gsqlAdminUsername")}
                gsqlAdminPassword=${myAnt.getProperty("gsqlAdminPassword")}
                gsqlGraphname=${myAnt.getProperty("gsqlGraphname")}
                gsqlHost=${myAnt.getProperty("gsqlHost")}
            """.trimIndent()

            WriteFile("gradle.properties", propertiesText)

            // if (myAnt.getProperty("gsqlEnablePropertiesPlugin") == "y")

            myAnt.invokeMethod("echo", myAnt.getProperty("gsqlGraphname"))
        }
    }

    fun WriteFile(filename: String, text: String) {
        val file: File = File(filename)
        if (file.exists()) {
            File("backup-$filename").writeText(file.readText())
        }
        file.writeText(text)
    }
}
